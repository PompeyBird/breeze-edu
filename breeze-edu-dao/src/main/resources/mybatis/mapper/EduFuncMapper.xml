<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.bird.breeze.edu.dao.EduFuncMapper">
  <resultMap id="BaseResultMap" type="org.bird.breeze.edu.model.EduFunc">
    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="FUNC_CODE" jdbcType="VARCHAR" property="funcCode" />
    <result column="FUNC_NAME" jdbcType="VARCHAR" property="funcName" />
    <result column="FUNC_ORDER" jdbcType="INTEGER" property="funcOrder" />
    <result column="SUP_FUNC_ID" jdbcType="INTEGER" property="supFuncId" />
    <result column="DATA_STATE" jdbcType="INTEGER" property="dataState" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="MODIFY_TIME" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="FUNC_URL" jdbcType="VARCHAR" property="funcUrl" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, FUNC_CODE, FUNC_NAME, FUNC_ORDER, SUP_FUNC_ID, DATA_STATE, CREATE_TIME, MODIFY_TIME, 
    FUNC_URL
  </sql>
  <select id="selectByExample" parameterType="org.bird.breeze.edu.model.EduFuncExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from EDU_FUNC
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from EDU_FUNC
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from EDU_FUNC
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.bird.breeze.edu.model.EduFuncExample">
    delete from EDU_FUNC
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.bird.breeze.edu.model.EduFunc">
    insert into EDU_FUNC (ID, FUNC_CODE, FUNC_NAME, 
      FUNC_ORDER, SUP_FUNC_ID, DATA_STATE, 
      CREATE_TIME, MODIFY_TIME, FUNC_URL
      )
    values (#{id,jdbcType=INTEGER}, #{funcCode,jdbcType=VARCHAR}, #{funcName,jdbcType=VARCHAR}, 
      #{funcOrder,jdbcType=INTEGER}, #{supFuncId,jdbcType=INTEGER}, #{dataState,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, #{funcUrl,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.bird.breeze.edu.model.EduFunc">
    insert into EDU_FUNC
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="funcCode != null">
        FUNC_CODE,
      </if>
      <if test="funcName != null">
        FUNC_NAME,
      </if>
      <if test="funcOrder != null">
        FUNC_ORDER,
      </if>
      <if test="supFuncId != null">
        SUP_FUNC_ID,
      </if>
      <if test="dataState != null">
        DATA_STATE,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME,
      </if>
      <if test="funcUrl != null">
        FUNC_URL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="funcCode != null">
        #{funcCode,jdbcType=VARCHAR},
      </if>
      <if test="funcName != null">
        #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="funcOrder != null">
        #{funcOrder,jdbcType=INTEGER},
      </if>
      <if test="supFuncId != null">
        #{supFuncId,jdbcType=INTEGER},
      </if>
      <if test="dataState != null">
        #{dataState,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="funcUrl != null">
        #{funcUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.bird.breeze.edu.model.EduFuncExample" resultType="java.lang.Long">
    select count(*) from EDU_FUNC
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update EDU_FUNC
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.funcCode != null">
        FUNC_CODE = #{record.funcCode,jdbcType=VARCHAR},
      </if>
      <if test="record.funcName != null">
        FUNC_NAME = #{record.funcName,jdbcType=VARCHAR},
      </if>
      <if test="record.funcOrder != null">
        FUNC_ORDER = #{record.funcOrder,jdbcType=INTEGER},
      </if>
      <if test="record.supFuncId != null">
        SUP_FUNC_ID = #{record.supFuncId,jdbcType=INTEGER},
      </if>
      <if test="record.dataState != null">
        DATA_STATE = #{record.dataState,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.modifyTime != null">
        MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.funcUrl != null">
        FUNC_URL = #{record.funcUrl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update EDU_FUNC
    set ID = #{record.id,jdbcType=INTEGER},
      FUNC_CODE = #{record.funcCode,jdbcType=VARCHAR},
      FUNC_NAME = #{record.funcName,jdbcType=VARCHAR},
      FUNC_ORDER = #{record.funcOrder,jdbcType=INTEGER},
      SUP_FUNC_ID = #{record.supFuncId,jdbcType=INTEGER},
      DATA_STATE = #{record.dataState,jdbcType=INTEGER},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      MODIFY_TIME = #{record.modifyTime,jdbcType=TIMESTAMP},
      FUNC_URL = #{record.funcUrl,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.bird.breeze.edu.model.EduFunc">
    update EDU_FUNC
    <set>
      <if test="funcCode != null">
        FUNC_CODE = #{funcCode,jdbcType=VARCHAR},
      </if>
      <if test="funcName != null">
        FUNC_NAME = #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="funcOrder != null">
        FUNC_ORDER = #{funcOrder,jdbcType=INTEGER},
      </if>
      <if test="supFuncId != null">
        SUP_FUNC_ID = #{supFuncId,jdbcType=INTEGER},
      </if>
      <if test="dataState != null">
        DATA_STATE = #{dataState,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="funcUrl != null">
        FUNC_URL = #{funcUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.bird.breeze.edu.model.EduFunc">
    update EDU_FUNC
    set FUNC_CODE = #{funcCode,jdbcType=VARCHAR},
      FUNC_NAME = #{funcName,jdbcType=VARCHAR},
      FUNC_ORDER = #{funcOrder,jdbcType=INTEGER},
      SUP_FUNC_ID = #{supFuncId,jdbcType=INTEGER},
      DATA_STATE = #{dataState,jdbcType=INTEGER},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      MODIFY_TIME = #{modifyTime,jdbcType=TIMESTAMP},
      FUNC_URL = #{funcUrl,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>